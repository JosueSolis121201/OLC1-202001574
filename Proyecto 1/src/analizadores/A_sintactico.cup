package analizadores;
import java_cup.runtime.Symbol;
import Instrucciones.*;



//definicion de terminalesterminal 
terminal String id;
terminal String coma;
terminal String prInicio;
terminal String prFin;

terminal String prNumero;
terminal String prCadena;
terminal String prBoolean;
terminal String prCaracter;


terminal String menos;
terminal String multiplicacion;
terminal String divicion;
terminal String potencia;
terminal String mod;
terminal String parentesis_A;
terminal String parentesis_B;

terminal String mayor;
terminal String menor;
terminal String mayor_o_igual;
terminal String menor_o_igual;
terminal String es_igual;
terminal String es_diferente;

terminal String or;
terminal String and;
terminal String not;

terminal String prIngresar;
terminal String prComo;
terminal String prCon_valor;

terminal String nombre_variable;

terminal String asignacion;
terminal String punto_coma;

terminal String si;
terminal String fin_si;
terminal String de_lo_contrario;
terminal String o_si;

terminal String segun;
terminal String hacer;
terminal String entonces;
terminal String fin_segun;
terminal String interrogacion_A;
terminal String interrogacion_B;

terminal String para;
terminal String hasta;
terminal String fin_para;

terminal String mientras;
terminal String fin_mientras;

terminal String repetir;
terminal String hasta_que;

terminal String funcion;
terminal String fin_funcion;
terminal String con_parametros;
terminal String igual;


terminal String retornar;

terminal String metodo;
terminal String fin_metodo;

terminal String ejecutar;
terminal String imprimir;
terminal String imprimir_nl;

terminal String mas;
terminal String num;
terminal String String;
terminal String Double;

terminal String Verdadero;
terminal String Falso;
terminal String Char;


//definicion de no terminales
non terminal Instruccion S0;
non terminal Instruccion INITIAL;
non terminal Instruccion VALORES;
non terminal Instruccion ESTRUCTURA;
non terminal Instruccion OPERACION;
non terminal Instruccion DECLARACION;
non terminal Instruccion TIPO_DE_DATO;
non terminal Instruccion EXPRESION;

non terminal NOMBRE_VARIABLES;
non terminal OPERADORES;




//gramaticas
start with S0
;

S0::= INITIAL:a{: :}
;

INITIAL::=  INITIAL ESTRUCTURA
    | ESTRUCTURA
;

ESTRUCTURA::= DECLARACION:a  {:  :}
;

DECLARACION::= prIngresar:a NOMBRE_VARIABLES:b prComo:c TIPO_DE_DATO:d prCon_valor:e EXPRESION:f punto_coma:g   {: System.out.println(a+b+c+d+e+f+g);  :}   
;

TIPO_DE_DATO::= prNumero {:System.out.println("numero");:}
    | prCadena {:System.out.println("cadena");:}
    | prBoolean {:System.out.println("prBoolean");:}
    | prCaracter  {:System.out.println("prCaracter");:}
;

EXPRESION::= OPERACION 
    | String:a {:System.out.println(a);:}
    | Double {:System.out.println("Double");:}
    | Verdadero {:System.out.println("Verdadero");:}
    | Falso  {:System.out.println("Falso");:}
    | Char:a  {:System.out.println(a);:}
;

NOMBRE_VARIABLES::= NOMBRE_VARIABLES coma nombre_variable   
    | nombre_variable :a {:System.out.println(a);:}
    |  
;





OPERACION::=  OPERACION OPERADORES VALORES  
    | VALORES
;

OPERADORES ::= mas
    | menos
    | divicion
    | potencia
    | mod
;

VALORES::= num:a{:System.out.println(a);:}
    | parentesis_A OPERACION parentesis_B
;






