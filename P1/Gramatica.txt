

//definicion de es terminales
  id
  coma
  prInicio
  prFin
  prNumero
  prCadena
  prBoolean
  prCaracter
  menos
  multiplicacion
  divicion
  potencia
  mod
  parentesis_A
  parentesis_B
  mayor
  menor
  mayor_o_igual
  menor_o_igual
  es_igual
  es_diferente
  or
  and
  not
  prIngresar
  prComo
  prCon_valor
  nombre_variable
  asignacion
  punto_coma
  si
  fin_si
  de_lo_contrario
  o_si
  segun
  hacer
  entonces
  fin_segun
  interrogacion_A
  interrogacion_B
  para
  hasta
  fin_para
  mientras
  fin_mientras
  repetir
  hasta_que
  funcion
  fin_funcion
  con_parametros
  igual
  retornar
  metodo
  fin_metodo
  ejecutar
  imprimir
  imprimir_nl
  mas
  num
  Double
  Verdadero
  Falso
  Char
  corchete_A
  corchete_B
  con
  incremental

//definicion de no terminales
 OPERADORES
 S0
 INSTRUCCIONES
 VALORES
 ESTRUCTURA
 OPERACION
 DECLARACION
 TIPO_DE_DATO
 EXPRESION
 NOMBRE_VARIABLES
 NUMERICO
 UNARIO
 ASIGNACION
 IF
 IMPRESION
 ELSE
 ELSE_IF
 SWITCH
 SWITCH_CASE
 SWITCH_ELSE
 CICLO_PARA
 CICLO_PARA_DEFINIDO
 SUB_CICLO_PARA_DEFINIDO
 CICLO_MIENTRAS
 CICLO_MIENTRAS_DEFINIDO
 CICLO_REPETIR
 CICLO_REPETIR_DEFINIDO
 LISTA
 RETORNO
 METODOS
 SUB_METODOS
 SUB2_METODOS
 SUB3_METODOS
 FUNCION
 SUB_FUNCION
 SUB2_FUNCION
 SUB3_FUNCION
 LLAMADA
 SUB_LLAMADA
 SUB2_LLAMADA
 SUB3_LLAMADA
 S1
 S0P

//gramaticas
start with S0
S0::= prInicio S0P

S0P::=S0P S1
    | S1

S1::= ESTRUCTURA
    | METODOS
    | FUNCION
    | LLAMADA

INSTRUCCIONES::=  INSTRUCCIONESESTRUCTURA
    | ESTRUCTURA

ESTRUCTURA::= DECLARACION punto_coma
    | ASIGNACION
    | IF
    | IMPRESIONpunto_coma
    | SWITCH
    | CICLO_PARA
    | CICLO_MIENTRAS
    | CICLO_REPETIR
    | RETORNO punto_coma 

RETORNO::= retornar EXPRESION

IMPRESION::= imprimir EXPRESION 
    | imprimir_nl EXPRESION

IF::= si EXPRESIONentonces INSTRUCCIONES

ELSE_IF::= ELSE_IFo_si EXPRESION entonces INSTRUCCIONES
    |   

ELSE::= de_lo_contrario INSTRUCCIONES
    | 

SWITCH::= segun EXPRESIONhacer SWITCH_CASE SWITCH_ELSEfin_segun 

SWITCH_CASE::= SWITCH_CASE interrogacion_A EXPRESION interrogacion_B entoncesINSTRUCCIONES
    | 

SWITCH_ELSE::= de_lo_contrario entonces INSTRUCCIONES
    |

CICLO_PARA::= para EXPRESION asignacion EXPRESION hasta EXPRESION CICLO_PARA_DEFINIDO fin_para  

CICLO_PARA_DEFINIDO::=hacer SUB_CICLO_PARA_DEFINIDO
    | con incremental EXPRESION hacer SUB_CICLO_PARA_DEFINIDO

SUB_CICLO_PARA_DEFINIDO::=SUB_CICLO_PARA_DEFINIDO ESTRUCTURA
    | 

CICLO_MIENTRAS::= mientras EXPRESION hacer CICLO_MIENTRAS_DEFINIDO fin_mientras   

CICLO_MIENTRAS_DEFINIDO::= CICLO_MIENTRAS_DEFINIDO ESTRUCTURA
    | 

CICLO_REPETIR::= repetir CICLO_REPETIR_DEFINIDO hasta_que EXPRESION  

CICLO_REPETIR_DEFINIDO::= CICLO_REPETIR_DEFINIDO  ESTRUCTURA
    | 

METODOS::= metodo nombre_variable SUB3_METODOS INSTRUCCIONES fin_metodo  

SUB3_METODOS::= con_parametros parentesis_A SUB2_METODOS parentesis_B 
    |

SUB2_METODOS::= SUB_METODOS
    |

SUB_METODOS::= SUB_METODOS coma nombre_variable TIPO_DE_DATO
    | nombre_variable TIPO_DE_DATO

FUNCION::= funcion nombre_variable TIPO_DE_DATOSUB3_FUNCION  INSTRUCCIONES fin_funcion    

SUB3_FUNCION::= con_parametros parentesis_A SUB2_FUNCION  parentesis_B 
    |

SUB2_FUNCION::= SUB_FUNCION
    |

SUB_FUNCION::= SUB_FUNCIONcoma nombre_variable TIPO_DE_DATO
    | nombre_variable TIPO_DE_DATO

LLAMADA::= ejecutar nombre_variable SUB3_LLAMADA punto_coma 

SUB3_LLAMADA::=  parentesis_A SUB2_LLAMADA parentesis_B 
    |

SUB2_LLAMADA::= SUB_LLAMADA
    |

SUB_LLAMADA::= SUB_LLAMADA coma nombre_variable TIPO_DE_DATO
    | nombre_variable TIPO_DE_DATO

ASIGNACION::= NOMBRE_VARIABLESasignacion EXPRESION

DECLARACION::= prIngresar NOMBRE_VARIABLES prComo TIPO_DE_DATO prCon_valor EXPRESION

TIPO_DE_DATO::= prNumero
    | prCadena
    | prBoolean
    | prCaracter

EXPRESION::= OPERACION
    | 
    | Verdadero
    | Falso
    | Char
    | UNARIO
    | not

UNARIO::=  mas:a NUMERICO 
    | menos:a NUMERICO  

NUMERICO::=  num
    | Double 

NOMBRE_VARIABLES::= NOMBRE_VARIABLES coma nombre_variable
    | nombre_variable

OPERACION::=  OPERACION OPERADORESVALORES
    | VALORES

OPERADORES ::= mas
    | menos
    | divicion
    | potencia
    | mod
    | multiplicacion
    | mayor
    | menor
    | mayor_o_igual
    | menor_o_igual
    | es_igual
    | es_diferente
    | or
    | and
    | not
    
VALORES::= num
    | parentesis_A OPERACION:a parentesis_B 
    | corchete_A OPERACION corchete_B
    | nombre_variable
    | Double
    







